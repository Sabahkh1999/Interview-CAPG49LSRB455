SABAH KHANAM MS 
CAPG49LSRB455
Batch 49


1. Difference in overloading and overriding.
When two or more methods in the same class have the same name but different parameters, it’s called Overloading.
When the method signature (name and parameters) are the same in the superclass and the child class, it’s called Overriding.
The method Overriding occurs between superclass and subclass. Overloading occurs between the methods in the same class.

2.If both the functions are statis can we over ride?
No. We cannot override two methods if they differ only by static keyword.

3.Diffference bew Final , Finally and Finalize.
The basic difference between final, finally and finalize is that the final is an access modifier, 
finally is the block in Exception Handling and finalize is the method of object class.

4.What are marker Interfaces?
A marker interface is an interface that has no methods or constants inside it. It provides run-time type information about objects, 
so the compiler and JVM have additional information about the object. A marker interface is also called a tagging interface.

5.What is Singleton class?
A Singleton class in Java allows only one instance to be created and provides global access to all other classes through this single object or instance.
 Similar to the static fields, The instance fields(if any) of a class will occur only for a single time.

6.What is the underlying Data structure for Arraylist and Linkedlist?
ArrayList uses the Array data structure, and LinkedList uses the DoublyLinkedList data structure.

7.What is hash collitition?
A collision occurs when more than one value to be hashed by a particular hash function hash to the
 same slot in the table or data structure (hash table) being generated by the hash function.

8.What are lambda Expressions?
A lambda expression is a short block of code which takes in parameters and returns a value. Lambda expressions are similar to methods,
 but they do not need a name and they can be implemented right in the body of a method.

9.Whats is functional interface?
A functional interface is an interface that contains only one abstract method.
 They can have only one functionality to exhibit. From Java 8 onwards, lambda expressions can be used to represent the instance of a functional interface.

10.What are optional classes in Java 8?
Optional is a container object used to contain not-null objects. Optional object is used to represent null with absent value.
 This class has various utility methods to facilitate code to handle values as 'available' or 'not available' instead of checking null values.

11.Whats is factory design pattern and Adapter and difference bew th?
A Factory Design Pattern is an interface or abstract class for creating an object but let the subclasses decide which class to instantiate.
Adapter dESIGN pattern works as a bridge between two incompatible interfaces. This type of design pattern comes under structural pattern as
 this pattern combines the capability of two independent interfaces.

12.What are Solid principles ?
These principles establish practices that lend to developing software with considerations for maintaining and extending as the project grows. 
Adopting these practices can also contribute to avoiding code smells, refactoring code, and Agile or Adaptive software development.
It’s a mnemonic acronym for the following five design principles:

Single Responsibility Principle
Open/Closed Principle
Liskov Substitution Principle
Interface Segregation Principle
Dependency Inversion


13.What does @component and @scan do in Sprinboot annaotation?
@Component is an annotation that allows Spring to automatically detect our custom beans. 
In other words, without having to write any explicit code, Spring will Scan our application for classes annotated with @Component. 
Instantiate them and inject any specified dependencies into them.

With Spring, we use the @ComponentScan annotation along with the @Configuration annotation to specify the packages that we want to be scanned. 
@ComponentScan without arguments tells Spring to scan the current package and all of its sub-packages

Factory Pattern does the operation on the created objects (the factory class done the job after creation), 
whereas Adapter pattern is used after the application components are designed so that we can use them without modifying the source code.


14.Whats is the Diference bew JPA , Hibernate and ORM?
Java Persistence API (JPA) defines the management of relational data in the Java applications.
Hibernate is an Object-Relational Mapping (ORM) tool which is used to save the state of Java object into the database.
It is just a specification. Various ORM tools implement it for data persistence.


15.What is indexing in Database ?
Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. 
It is a data structure technique which is used to quickly locate and access the data in a database.

16.Types of JDBC drivers
Type 1: JDBC-ODBC bridge.
Type 2: partial Java driver.
Type 3: pure Java driver for database middleware, pure Java driver for direct-to-database.
Type 4: highly-functional drivers with superior performance.

17.What is difference between @component and @bean and @service ?
@bean - It is used to explicitly declare a single bean, rather than letting Spring do it automatically. 
@component - If any class is annotated with @Component it will be automatically detect by using classpath scan.
@Service is a stereotype for the service layer.It annotates classes at the service layer.


18. What is difference bew SOAP and restful services techinically?
SOAP uses only XML for exchanging information in its message format whereas REST is not restricted to XML and its the choice of implementer which Media-Type to use like XML, JSON, Plain-text.
Moreover, REST can use SOAP protocol but SOAP cannot use REST.

19.Difference in POST and PUT.
PUT method is idempotent. So if you send retry a request multiple times, that should be equivalent to single request modification.
POST is NOT idempotent. So if you retry the request N times, you will end up having N resources with N different URIs created on server.

20.IS react uni directional or Bi directional?
React, a Javascript library, uses unidirectional data flow.